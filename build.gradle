plugins {
    id 'java'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.runelite.net'
    }
    mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
    compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Do not increase this until Runelite proper depends on a
    // modern version of okhttp.
    // influxdb-java bumps to okhttp 4.x in https://github.com/influxdata/influxdb-java/pull/644
    implementation("org.influxdb:influxdb-java:2.17")

    testImplementation 'junit:junit:4.13.1'
    testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
    testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion
}

// Lock all dependencies inside of the runtime classpath to be the exact same version
// as the compile only configuration.  This ensures nothing gets horribly out of sync
// between the two configurations due to runelite not being required on the
// runtime classpath.
configurations.runtimeClasspath { runtime ->
    configurations.compileClasspath.resolvedConfiguration.resolvedArtifacts.each { dep ->
        runtime.resolutionStrategy.force dep.moduleVersion.id.toString()
    }
}

group = '${group_id}'
version = '${version}'
sourceCompatibility = '11'

tasks.withType(JavaCompile.class).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(11)
}
